// Consigna de los profes: Un local de comidas posee información de las facturas
// emitidas en dos secuencias de caracteres. Desarrolle un algoritmo que procese
// ambas secuencias para crear una nueva secuencia que combine la información de
// las facturas y los detalles de forma alternada según se indique.
//
// Formato de la secuencia de facturas:
// * CódigoFactura: 5 dígitos numéricos.
// * FechaEmisión: 8 caracteres en formato aaaammdd.
// * TipoFactura: “A”, “B”, o “C”.
// * Nombre o razón social del cliente: cantidad indefinida de caracteres hasta la marca "#".
// * CUIT/CUIL: 11 caracteres numéricos.
//
// Estilo de la secuencia de facturas:
// CódigoFacturaFechaEmisiónTipoFacturaNombre#CUIT
//
// Ejemplo de la secuencia de facturas:
// |5|5|4|6|7|2|0|2|4|0|3|2|1|A|J|u|a|n|P|e|r|e|z|#|2|7|3|2|7|8|3|1|2|3|4|4|7|8|5|6|2|0|2|4|0|4|0|1|B|J|u|a|n|a|P|e|r|e|z|#|2|7|4|1|5|8|3|1|2|3|3|
//
// Formato de la secuencia con detalle de las facturas:
// * CódigoProducto: 6 caracteres alfanuméricos.
// * Descripción: caracteres alfanuméricos indefinidos.
// * Cantidad: un dígito del 1 al 9.
// * PrecioUnitario: 3 dígitos numéricos (es siempre un valor entero). 
// * Termina el detalle de una factura en “!”.
// * Una misma factura puede tener mas de una linea de detalle.
//
// Estilo de la secuencia con detalle de facturas:
// CódigoProductoDescripciónCantidadPrecioUnitario!
//
// Ejemplo de la secuencia con detalle de facturas:
// |A|1|B|2|4|B|J|u|g|o|N|a|r|a|n|j|a|2|0|8|0|A|A|5|5|4|B|M|e|d|i|a|l|u|n|a|s|6|1|2|0|!|B|2|1|B|2|4|C|e|r|e|a|l|5|1|2|5|!|
//
// Se pide:
// (a) Secuencia con el CUIT/CUIL y códigos de productos de todas las facturas emitidas en el mes de junio, sin importar el año.
// (b) Por factura informar la cantidad total de artículos comprados, sin diferenciar qué producto es.

Acción Profes10 ES

Ambiente

	sec_fac, sec_det, sec_sal: secuencia de carácter
	v_fac, v_det: carácter
	
	cant_compras, i: entero
	es_junio: lógico
	
	números: ("0", "1", "2", "3", "4", "5", "6", "7", "8", "9")
	
	Función CharToInt(entrada: carácter): entero ES
		Según entrada Hacer
			="1" : CharToInt := 1
			="2" : CharToInt := 2
			="3" : CharToInt := 3
			="4" : CharToInt := 4
			="5" : CharToInt := 5
			="6" : CharToInt := 6
			="7" : CharToInt := 7
			="8" : CharToInt := 8
			="9" : CharToInt := 9
		Fin Según
	Fin Función

Proceso

	ARR(sec_fac)
	AVZ(sec_fac, v_fac)
	ARR(sec_det)
	AVZ(sec_det, v_det)
	CREAR(sec_sal)
	
	cant_compras := 0
	es_junio := F

	Mientras NFDS(sec_fac) Hacer
		// Muestro el código de la factura.
		Escribir("Factura: ")
		Para i := 1 hasta 5 Hacer
			Escribir(v_fac)
			AVZ(sec_fac, v_fac)
		Fin Para
		
		// Avanzo hasta el dígito útil del mes.
		Para i := 1 hasta 5 Hacer
			AVZ(sec_fac, v_fac)
		Fin Para
		
		Si v_fac = "6" Entonces
			es_junio := V
		Fin Si
		
		// Avanzo hasta el CUIT/CUIL.
		Mientras v_fac <> "#" Hacer
			AVZ(sec_fac, v_fac)
		Fin Mientras
		AVZ(sec_fac, v_fac)
		
		// Si el mes es junio, copio el CUIT/CUIL.
		Si es_junio Entonces
			Para i := 1 hasta 11 Hacer
				GRABAR(sec_sal, v_fac)
				AVZ(sec_fac, v_fac)
			Fin Para
		Contrario
			Para i := 1 hasta 11 Hacer
				AVZ(sec_fac, v_fac)
			Fin Para
		Fin Si
		
		// Tratamiento de la segunda secuencia.
		Mientras NFDS(sec_det) y v_det <> "!" Hacer
			// Si el mes es junio, copio
			// el código de producto.
			Si es_junio Entonces
				Para i := 1 hasta 6 Hacer
					GRABAR(sec_sal, v_det)
					AVZ(sec_det, v_det)
				Fin Para
			Contrario
				Para i := 1 hasta 6 Hacer
					AVZ(sec_det, v_det)
				Fin Para				
			Fin Si
			
			// Salto la descripción.
			Mientras v_det NO en números Hacer
				AVZ(sec_det, v_det)
			Fin Mientras
			
			// Estoy en la cantidad de
			// artículos comprados.
			cant_compras := cant_compras + CharToInt(v_det)
			
			// Avanzo hasta el siguiente código
			// o la marca de fin de una factura
			// según lo que haya.
			Para i := 1 hasta 4 Hacer
				AVZ(sec_det, v_det)
			Fin Para
		Fin Mientras
		
		// Total de artículos comprados en la factura.
		Escribir("Artículos comprados en la factura: " cant_compras)
		
		// Reseteo las variables necesarias.
		cant_compras := 0
		
		// Avanzo la secuencia de detalles.
		// La otra no porque ya quedé parado en
		// el primer carácter de la siguiente
		// tras tratar el CUIT/CUIL.
		AVZ(sec_det, v_det)
	Fin Mientras
	
	CERRAR(sec_fac)
	CERRAR(sec_det)
	CERRAR(sec_sal)

Fin Acción
