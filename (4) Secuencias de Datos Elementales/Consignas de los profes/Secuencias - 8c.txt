// Consigna de los profes: Un importante banco del país posee la información de
// los resúmenes de las tarjetas de créditos (del último mes) de sus clientes en
// una secuencia de caracteres con la siguiente estructura:
//
// * Categoría del cliente, 1 carácter: (G) Gold, (P) Platinum o (B) Black.
// * Nombre y apellido del cliente, finaliza con el carácter “#”.
// * Cantidad de movimientos, 1 carácter.
// * Movimientos, con la siguiente estructura:
//    ** Detalle de la operación: finaliza con el carácter “%”.
//    ** Rubro de la operación, 1 carácter: (S) Supermercado, (F) Farmacia, (T) Tecnología u (O) Otros.
//    ** Importe: 4 caracteres.
//
// Informar:
// (a) Listado de todos los clientes que pertenecen a una categoría en particular (elegida por el usuario), con su respectivo importe total.
// (b) Importe total vendido de la categoría Supermercado.
//
// Estilo de la secuencia:
// CategoriaNombreApellido#CantidadMovimientosMovimientos
//
// Ejemplo de la secuencia:
// |P|J|U|A|N|P|E|R|E|Z|#|4|D|E|T|A|L|L|E|%|F|2|3|0|0|B|M|A|R|I|A|L|O|P|E|Z|#|7|D|E|T|A|L|L|E|%|T|4|5|0|0|...|FDS

Acción Secuencias8 ES

Ambiente

	sec: secuencia de carácter
	v, cat_us, resg_cat, resg_rubro: carácter
	importe, importe_cat, importe_sup, i: entero
		
	Procedimiento PedirCategoría() ES
		Escribir("Introduzca una categoría: ")
		Leer(cat_us)
	Fin Procedimiento
	
	Función CharToInt(entrada: carácter): entero ES
		Según entrada Hacer
			="1" : CharToInt := 1
			="2" : CharToInt := 2
			="3" : CharToInt := 3
			="4" : CharToInt := 4
			="5" : CharToInt := 5
			="6" : CharToInt := 6
			="7" : CharToInt := 7
			="8" : CharToInt := 8
			="9" : CharToInt := 9
		Fin Según
	Fin Función

Proceso

	ARR(sec)
	AVZ(sec, v)
	
	Inicializar()
	PedirCategoría()
	
	importe_sup := 0
	
	Mientras NFDS(sec) Hacer
		// Estoy parado en la categoría del
		// cliente.
		resg_cat := v
		
		Si resg_cat = cat_us Entonces
			AVZ(sec, v)
			Escribir("Cliente: ")
			
			Mientras v <> "#" Hacer
				Escribir(v)
				AVZ(sec, v)
			Fin Mientras
		Contrario
			Mientras v <> "#" Hacer
				AVZ(sec, v)
			Fin Mientras
		Fin Si
		
		// Resguardo la cantidad de movimientos.
		AVZ(sec, v)
		resg_mov := CharToInt(v)
		
		// Inicializo algunas variables.
		importe := 0
		importe_cat := 0
		
		// Trato los importes de los movimientos.
		Para i := 1 hasta resg_mov Hacer
			Mientras v <> "%" Hacer
				AVZ(sec, v)
			Fin Mientras
			
			AVZ(sec, v)
			resg_rubro := v
			AVZ(sec, v)
			
			Si resg_cat = cat_us o resg_rubro = "S" Entonces
				Para i := 1 hasta 4 Hacer
					Según i Hacer
						="1": importe := importe + CharToInt(v) * 1000
						="2": importe := importe + CharToInt(v) * 100
						="3": importe := importe + CharToInt(v) * 10
						="4": importe := importe + CharToInt(v) * 1
					Fin Según
					AVZ(sec, v)
				Fin Para
				
				Si resg_cat = cat_us Entonces
					importe_cat := importe_cat + importe
				Fin Si
				
				Si resg_rubro = "S" Entonces
					importe_sup := importe_sup + importe
				Fin Si
			Contrario
				Para i := 1 hasta 4 Hacer
					AVZ(sec, v)
				Fin Para
			Fin Si
		Fin Para
		
		Si resg_cat = cat_us Entonces
			Escribir("Importe pagado: " importe_cat)
		Fin Si
	Fin Mientras
	
	Escribir("Importe total pagado en la categoría 'Supermercado': " importe_sup)
	
	CERRAR(sec)

Fin Acción
