// Esta resolución contempla el caso de que el archivo de movimientos sí esté
// ordenado por el código de movimiento, que es lo que realmente debería suceder
// aún si la consigna dice que no.
//
// Sin embargo, esta resolución debería funcionar igualmente aún si el archivo
// de movimientos no está ordenado por código de movimiento.

Acción 2.2.25 ES

Ambiente

	Fecha = Registro
		Año: N(4)
		Mes: (1..12)
		Día: (1..31)
	Fin Registro
	
	Amigos = Registro
		Clave = Registro
			CodUsuario: N(5)
			CodAmigo: N(5)
		Fin Registro
		FechaAmistad: Fecha
		MensajeMuro: AN(200)
	Fin Registro
	
	ARCH, ARCH3: archivo de Amigos ordenado por Clave
	REG, REG3: Amigos

	Notificaciones = Registro
		Clave = Registro
			CodUsuario: N(5)
			CodAmigo: N(5)
		Fin Registro
		CodMov: AN(1)
		FechaAmistad: Fecha
		MensajeMuro: AN(200)
	Fin Registro
	
	ARCH2: archivo de Notificaciones ordenado por Clave y CodMov
	REG2: Notificaciones
	
	Procedimiento LEER_AMIGOS() ES
		LEER(ARCH, REG)
		Si FDA(ARCH) Entonces
			REG.Clave := HV
		Fin Si
	Fin Procedimiento

	Procedimiento LEER_NOTIFICACIONES() ES
		LEER(ARCH2, REG2)
		Si FDA(ARCH2) Entonces
			REG2.Clave := HV
		Fin Si
	Fin Procedimiento

Proceso

	ABRIR E/ (ARCH)
	ABRIR E/ (ARCH2)
	ABRIR S/ (ARCH3)
	
	LEER_AMIGOS()
	LEER_NOTIFICACIONES()

	Mientras REG.Clave <> HV o REG2.Clave <> HV Hacer
		Si REG.Clave < REG2.Clave Entonces
			GRABAR(ARCH3, REG)
			LEER_AMIGOS()
		Contrario
			Si REG.Clave > REG2.Clave Entonces
				// Asumo que el primer movimiento es una alta.			
				resg_cod_usuario := REG2.Clave.CodUsuario
				resg_cod_amigo := REG2.Clave.CodAmigo
				REG3.CodUsuario := resg_cod_usuario
				REG3.CodAmistad := resg_cod_amigo
				REG3.FechaAmistad := REG2.FechaAmistad
				REG3.MensajeMuro := REG2.MensajeMuro
				LEER_NOTIFICACIONES()
				
				Mientras resg_cod_usuario = REG2.Clave.CodUsuario y resg_cod_amigo = REG2.Clave.CodAmigo Hacer
					Según REG2.CodMov Hacer
						= "A": Escribir("Error. No se puede volver a añadir una amistad.")
						= "B": baja_física := V
						= "M": REG3.MensajeMuro := REG2.MensajeMuro
					Fin Según
					LEER_NOTIFICACIONES()
				Fin Mientras
				
				Si NO baja_física Entonces
					GRABAR(ARCH3, REG3)
				Fin Si
			Contrario
				REG3 := REG
				
				Mientras REG.Clave = REG2.Clave Hacer
					Según REG2.CodMov Hacer
						= "A": Escribir("Error. No se puede dar de alta una amistad existente.")
						= "B": baja_física := V
						= "M": REG3.MensajeMuro := REG2.MensajeMuro
					Fin Según
					LEER_NOTIFICACIONES()
				Fin Mientras
				
				Si NO baja_física Entonces
					GRABAR(ARCH3, REG3)
				Fin Si
			Fin Si
		Fin Si
	Fin Mientras

	CERRAR(ARCH)
	CERRAR(ARCH2)
	CERRAR(ARCH3)

Fin Acción
