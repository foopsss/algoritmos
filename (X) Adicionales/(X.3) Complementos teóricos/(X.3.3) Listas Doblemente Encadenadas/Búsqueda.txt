// Este algoritmo sirve para realizar la búsqueda de un valor introducido por el
// usuario en una lista doblemente encadenada.

Acción Búsqueda(prim, ult: puntero a Nodo) ES

Ambiente

    Nodo = Registro
        dato: N(2)
        ant: puntero a Nodo
        prox: puntero a Nodo
    Fin Registro
    
    q: puntero a Nodo
    valor: entero

    Procedimiento PedirValor() ES
        Escribir("Ingrese un valor: ")
        Leer(valor)
    Fin Procedimiento

Proceso

    PedirValor()
    q := prim
    
    Si q = NIL Entonces
        Escribir("La lista está vacía.")
    Contrario
        Mientras *q.prox <> NIL y *q.dato <> valor Hacer
            q := *q.prox
        Fin Mientras
        
        // Como una de las condiciones para entrar al Mientras
        // es "*q.prox <> NIL", en este condicional verifico si
        // el último elemento cumple con la segunda condición o no.
        //
        // Debido a que este nodo luego apunta a NIL, por ser el
        // último, su contenido no es revisado dentro del Mientras.
        Si *q.dato <> valor Entonces
            Escribir("ERROR. La lista NO contiene un elemento con el valor introducido.")
        Contrario
            Escribir("La lista contiene un elemento con el valor introducido.")
        Fin Si
    Fin Si

Fin Acción
